
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COMMA DIVIDE DO ENDDO ENDIF EQUALS GREATER GREATEREQUAL ID IF LESS LESSEQUAL LPAREN MINUS NOTEQUALS NUMBER PLUS READ RPAREN THEN TIMES WRITEprogram : statement_liststatement_list : statement\n                     | statement statement_liststatement : assignment\n                | if_statement\n                | do_loopassignment : ID ASSIGN expressionif_statement : IF LPAREN expression RPAREN THEN statement_list ENDIFdo_loop : DO ID ASSIGN expression COMMA expression statement_list ENDDOexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression EQUALS term\n                  | expression NOTEQUALS term\n                  | expression LESS term\n                  | expression GREATER term\n                  | expression LESSEQUAL term\n                  | expression GREATEREQUAL termexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : IDfactor : NUMBERfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'ID':([0,3,4,5,6,9,11,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,52,],[7,7,-4,-5,-6,13,14,14,-22,-7,-18,-21,-23,14,14,14,14,14,14,14,14,14,14,14,14,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,7,14,7,-8,-9,]),'IF':([0,3,4,5,6,14,15,16,17,18,35,36,37,38,39,40,41,42,43,44,45,46,49,50,52,],[8,8,-4,-5,-6,-22,-7,-18,-21,-23,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,8,8,-8,-9,]),'DO':([0,3,4,5,6,14,15,16,17,18,35,36,37,38,39,40,41,42,43,44,45,46,49,50,52,],[9,9,-4,-5,-6,-22,-7,-18,-21,-23,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,9,9,-8,-9,]),'$end':([1,2,3,4,5,6,10,14,15,16,17,18,35,36,37,38,39,40,41,42,43,44,45,50,52,],[0,-1,-2,-4,-5,-6,-3,-22,-7,-18,-21,-23,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,-8,-9,]),'ENDIF':([3,4,5,6,10,14,15,16,17,18,35,36,37,38,39,40,41,42,43,44,45,48,50,52,],[-2,-4,-5,-6,-3,-22,-7,-18,-21,-23,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,50,-8,-9,]),'ENDDO':([3,4,5,6,10,14,15,16,17,18,35,36,37,38,39,40,41,42,43,44,45,50,51,52,],[-2,-4,-5,-6,-3,-22,-7,-18,-21,-23,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,-8,52,-9,]),'ASSIGN':([7,13,],[11,21,]),'LPAREN':([8,11,12,19,21,22,23,24,25,26,27,28,29,30,31,47,],[12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NUMBER':([11,12,19,21,22,23,24,25,26,27,28,29,30,31,47,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'TIMES':([14,16,17,18,35,36,37,38,39,40,41,42,43,44,45,],[-22,30,-21,-23,30,30,30,30,30,30,30,30,-19,-20,-24,]),'DIVIDE':([14,16,17,18,35,36,37,38,39,40,41,42,43,44,45,],[-22,31,-21,-23,31,31,31,31,31,31,31,31,-19,-20,-24,]),'PLUS':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,22,-18,-21,-23,22,22,22,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,22,]),'MINUS':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,23,-18,-21,-23,23,23,23,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,23,]),'EQUALS':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,24,-18,-21,-23,24,24,24,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,24,]),'NOTEQUALS':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,25,-18,-21,-23,25,25,25,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,25,]),'LESS':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,26,-18,-21,-23,26,26,26,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,26,]),'GREATER':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,27,-18,-21,-23,27,27,27,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,27,]),'LESSEQUAL':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,28,-18,-21,-23,28,28,28,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,28,]),'GREATEREQUAL':([14,15,16,17,18,20,32,34,35,36,37,38,39,40,41,42,43,44,45,49,],[-22,29,-18,-21,-23,29,29,29,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,29,]),'RPAREN':([14,16,17,18,20,32,35,36,37,38,39,40,41,42,43,44,45,],[-22,-18,-21,-23,33,45,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,]),'COMMA':([14,16,17,18,34,35,36,37,38,39,40,41,42,43,44,45,],[-22,-18,-21,-23,47,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-24,]),'THEN':([33,],[46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,3,46,49,],[2,10,48,51,]),'statement':([0,3,46,49,],[3,3,3,3,]),'assignment':([0,3,46,49,],[4,4,4,4,]),'if_statement':([0,3,46,49,],[5,5,5,5,]),'do_loop':([0,3,46,49,],[6,6,6,6,]),'expression':([11,12,19,21,47,],[15,20,32,34,49,]),'term':([11,12,19,21,22,23,24,25,26,27,28,29,47,],[16,16,16,16,35,36,37,38,39,40,41,42,16,]),'factor':([11,12,19,21,22,23,24,25,26,27,28,29,30,31,47,],[17,17,17,17,17,17,17,17,17,17,17,17,43,44,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','fortran_analyzer.py',84),
  ('statement_list -> statement','statement_list',1,'p_statement_list','fortran_analyzer.py',88),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','fortran_analyzer.py',89),
  ('statement -> assignment','statement',1,'p_statement','fortran_analyzer.py',96),
  ('statement -> if_statement','statement',1,'p_statement','fortran_analyzer.py',97),
  ('statement -> do_loop','statement',1,'p_statement','fortran_analyzer.py',98),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','fortran_analyzer.py',102),
  ('if_statement -> IF LPAREN expression RPAREN THEN statement_list ENDIF','if_statement',7,'p_if_statement','fortran_analyzer.py',106),
  ('do_loop -> DO ID ASSIGN expression COMMA expression statement_list ENDDO','do_loop',8,'p_do_loop','fortran_analyzer.py',110),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','fortran_analyzer.py',116),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','fortran_analyzer.py',117),
  ('expression -> expression EQUALS term','expression',3,'p_expression_binop','fortran_analyzer.py',118),
  ('expression -> expression NOTEQUALS term','expression',3,'p_expression_binop','fortran_analyzer.py',119),
  ('expression -> expression LESS term','expression',3,'p_expression_binop','fortran_analyzer.py',120),
  ('expression -> expression GREATER term','expression',3,'p_expression_binop','fortran_analyzer.py',121),
  ('expression -> expression LESSEQUAL term','expression',3,'p_expression_binop','fortran_analyzer.py',122),
  ('expression -> expression GREATEREQUAL term','expression',3,'p_expression_binop','fortran_analyzer.py',123),
  ('expression -> term','expression',1,'p_expression_term','fortran_analyzer.py',127),
  ('term -> term TIMES factor','term',3,'p_term_binop','fortran_analyzer.py',131),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','fortran_analyzer.py',132),
  ('term -> factor','term',1,'p_term_factor','fortran_analyzer.py',136),
  ('factor -> ID','factor',1,'p_factor_id','fortran_analyzer.py',140),
  ('factor -> NUMBER','factor',1,'p_factor_number','fortran_analyzer.py',144),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','fortran_analyzer.py',148),
]
